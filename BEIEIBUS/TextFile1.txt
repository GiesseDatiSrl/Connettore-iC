 Public Overridable Function Elabora_ImportOrdiniNew() As Boolean

         ' Leggo l'ID dell'ultimo ordine recuperato dal WS
    Dim LastStoredOrderID As String = "10"


    ' url del web service di test
    Dim wsUrl As String = "http://am.apexnet.it/api_appstore_ic/v1/progetti/ic.appstore/exportPaginazione/ordini"


    Dim client As RestClient = New RestClient(wsUrl)

    ' Prima chiamata. Verifica quanti record ci sono da elaborare (count=1)
    ' ------------------------------------------------------------------
    Dim request1 As RestRequest = New RestRequest(Method.[GET])

    request1.AddParameter("format", "json")
    request1.AddParameter("lastID", LastStoredOrderID)
    request1.AddParameter("count", 1)
    Dim response1 As IRestResponse(Of Orders) = client.Execute(Of Orders)(request1)


    Dim members = JsonConvert.DeserializeObject<Members>(jsonstring);
    Dim ser As New JavaScriptSerializer()

    response1.Data



    ' Gestisco eventuali eccezioni
    If response1.ErrorException IsNot Nothing Then
      Console.WriteLine("Error retrieving response.  Check inner details for more info.")
      Return False
    End If

    ' Se total_count = 0 vuol dire che non ci sono Ordini nuovi
    If response1.Data.meta.total_count = 0 Then
      Console.WriteLine("Orders not found!")
      Return False
    End If

    ' Seconda chiamata. Estraggo tutto gli ordini (niente paginazione)
    ' Se non desidero paginare fra i risultati pongo limit al numero di record che voglio che vengano ritornati
    ' Se desidero paginare fra i record devo impostare limit per dire quanti record voglio ogni volta e offset per cambiare le pagina
    ' ---------------------------------------------------------------
    Dim request2 = New RestRequest(Method.[GET])
    request2.AddParameter("format", "json")
    request2.AddParameter("offset", 0)
    request2.AddParameter("limit", response1.Data.meta.total_count)
    request2.AddParameter("count", 0)
    request2.AddParameter("lastID", LastStoredOrderID)
    'request.AddParameter("lastDateImport", ""); 

    ' RestSharp deserializza automaticamente il risultato del ws e lo mette nella classe Orders
    Dim response2 = client.Execute(Of Orders)(request2)

    ' Gestisco eventuali eccezioni
    If response2.ErrorException IsNot Nothing Then
      Console.WriteLine("Error retrieving response.  Check inner details for more info.")
      Return
    End If

    ' ciclo per ogni testata
    For Each t As var In response2.Data.testate
      ' Ogni volta che elaboro un ordini memorizzo il suo ID 
      LastStoredOrderID = t.id.ToString()

      Console.WriteLine(vbLf)
      Console.WriteLine("Order ID:" & Convert.ToString(t.id))
      Console.WriteLine("Customer code:" & Convert.ToString(t.cod_clifor))
      '.... ecc..

      ' Ciclo per ogni riga
      For Each r As var In t.righe
        Console.WriteLine("rows")
        Console.WriteLine("...product code:" & Convert.ToString(r.codice_articolo))
        Console.WriteLine("...product name:" & Convert.ToString(r.descrizione_riga))
        Console.WriteLine("...quantity:" & Convert.ToString(r.qta))
        ' .... ecc....
        Console.WriteLine("...price:" & Convert.ToString(r.prezzo))
      Next
    Next

  End Function
